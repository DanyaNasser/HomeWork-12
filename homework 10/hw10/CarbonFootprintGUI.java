/**
 *  The driver class that handles the execution of previous classes
 * 
 * @author Danya Nasr
 * Assignment: 10
 */
package hw10;

import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class CarbonFootprintGUI extends JFrame{
    private JPanel panel;
    private JLabel label;
    private JButton calculate;
    private JTextArea result;
    
    public CarbonFootprintGUI(){
        panel = new JPanel();
        panel.setLayout(new GridLayout(6, 1, 5, 10));
        label = new JLabel("Enter the following Bills for the building: ");
        panel.add(label);
        
        //each line for each input
        JPanel row1 = new JPanel();
        row1.setLayout(new GridLayout(1, 2));
        JLabel electricBillLabel = new JLabel("Total Electric bill(kWh): ");
        row1.add(electricBillLabel);
        JTextField electricBillTextField = new JTextField();
        row1.add(electricBillTextField);
        panel.add(row1);
        
        JPanel row2 = new JPanel();
        row2.setLayout(new GridLayout(1, 2));
        JLabel gasBillLabel = new JLabel("Total Gas bill(gallons): ");
        row2.add(gasBillLabel);
        JTextField gasBillTextField = new JTextField();
        row2.add(gasBillTextField);
        panel.add(row2);
        
        JPanel row3 = new JPanel(new GridLayout(1, 2));
        JLabel oilBillLabel = new JLabel("Total Oil bill(gallons): ");
        row3.add(oilBillLabel);
        JTextField oilBillTextField = new JTextField();
        row3.add(oilBillTextField);
        panel.add(row3);
        
        result = new JTextArea("After entering value\nPress Calculate");
        result.setEditable(false);
        JScrollPane pane = new JScrollPane(result);
        Font f = new Font("TimesRoman", Font.BOLD, 18);
        result.setFont(f);
        calculate = new JButton("Calculate");
        calculate.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                //if everything is not filled
                if (electricBillTextField.getText().isBlank() || 
                     gasBillTextField.getText().isBlank() || 
                     oilBillTextField.getText().isBlank()){
                    JOptionPane.showMessageDialog(rootPane, "All the fields are required!!!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    try{
                        double electricBill = Double.parseDouble(electricBillTextField.getText());
                        double gasBill = Double.parseDouble(gasBillTextField.getText());
                        double oilBill = Double.parseDouble(oilBillTextField.getText());
                        CarbonFootprint building = new Building(electricBill, gasBill, oilBill);
                        double carbonFootPrint = building.getCarbonFootprint();
                        result.setText("The carbon footprint generated by your building is:"
                                + "\n"+carbonFootPrint+" in kg"+
                                "\n"+(carbonFootPrint/1000)+" in metric tonnes"+
                                "\n"+(carbonFootPrint/1016.049)+" in imperial tonnes");
                        
                    } catch (Exception exp){
                         JOptionPane.showMessageDialog(rootPane, exp.getMessage(), "Invalid Input..Only numbers allowed", JOptionPane.ERROR_MESSAGE);
                    }
                    
                }
            }
        });
        
        panel.add(calculate);
        panel.add(pane);
        add(panel);
    }
    
    public static void main(String[] args) {
        CarbonFootprintGUI gui = new CarbonFootprintGUI();
        gui.setTitle("Carbon Footprint Calculator");
        gui.setLocationRelativeTo(null);
        gui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        gui.setSize(500,600);
        gui.setVisible(true);
    }
    
}